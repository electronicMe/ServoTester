

	servo_1: entity work.PWMServo(PWMServo_a) generic map(frequency_g  => 20,         -- typ       20, in ns
																				periode_g => 20000000,   -- typ 20000000, in ns, must be devidable by frequency_g
																				minOn_g   => 1000000,    -- typ  1000000, in ns, must be devidable by frequency_g, must be smaller than maxOn_g
																				maxOn_g   => 2000000,    -- typ  2000000, in ns, must be devidable by frequency_g, must be bigger than minOn_g
	
																				resolution_g    => 1024, -- typ     1024, numeric value of resolution
																				resolutionBit_g => 10    -- typ       10, bit value of resolution
																			)
															port map(CLK       => CLOCK_50,
																		RESET_n   => '1',
																		DUTYCYCLE => SW,
	
																		PWMOut    => LEDG(0)
																		);
																		
																		
																		
																		
																		
	--==========================================================================
	-- DEBOUNCER
	
	debouncer0 : entity work.debounce(rtl) generic map (	clock_period    => 20 ns,
																			sample_period   => 500 us,
																			mintime_pressed => 10 ms)
														port map   (	CLK             => CLOCK_50,
																			BUTTON_in       => GPIO_0(0),
																			BUTTON_out      => s_debouncedGPIO0(0)
																		);
	
	debouncer1 : entity work.debounce(rtl) generic map (	clock_period    => 20 ns,
																			sample_period   => 500 us,
																			mintime_pressed => 10 ms)
														port map   (	CLK             => CLOCK_50,
																			BUTTON_in       => GPIO_0(1),
																			BUTTON_out      => s_debouncedGPIO0(1)
																		);
	
	debouncer2 : entity work.debounce(rtl) generic map (	clock_period    => 20 ns,
																			sample_period   => 500 us,
																			mintime_pressed => 10 ms)
														port map   (	CLK             => CLOCK_50,
																			BUTTON_in       => GPIO_0(2),
																			BUTTON_out      => s_debouncedGPIO0(2)
																		);
  
	--==========================================================================
	-- ENCODER, COUNTER
	
	encoder : entity work.rotenc(rotenc_a)	port map (	CLK   => CLOCK_50,
																		reset => KEY(0),
																		A     => s_debouncedGPIO0(0),
																		B     => s_debouncedGPIO0(1),
																		TL    => s_TL,
																		TR    => s_TR);
	
	counter : entity work.rotcount(rotcount_a) 	generic map (	max    => 1024,
																					outBit => 10)
																port map 	(	clk    => CLOCK_50,
																					reset  => KEY(0),
																					PB		 => s_debouncedGPIO0(2),
																					TL     => s_TL,
																					TR     => s_TR,
																					TC     => s_dutycycle);
	
	--==========================================================================